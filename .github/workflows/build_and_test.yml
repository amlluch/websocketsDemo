name: Build and Test

on:
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Poetry Install
      uses: knowsuchagency/poetry-install@v2
      with:
        create-virtualenv: true
    - name: Install Dependencies
      run: |
        poetry install
    - name: Run Tests
      run: |
        poetry run pytest tests/

  deploy:
    needs: [ test ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python Environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Poetry Install
        uses: knowsuchagency/poetry-install@v2

      - name: Generate zip for code
        run: |
          zip -r lambda_code.zip src

      - name: Export requirements
        run: |
          poetry export -f requirements.txt -o requirements.txt
          echo "Requirements list"
          cat requirements.txt

      - name: Install requirements in file
        run: |
          mkdir -p python
          pip install -r requirements.txt -t python
          zip -r dependencies_layer.zip python  >/dev/null
          cd ..

      - name: Get repository name
        run: echo "REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f2)" >> $GITHUB_ENV

      - name: Copy code to s3
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          source: 'lambda_code.zip'
          dest: 's3://lambda-code-tests/${{ env.REPO_NAME }}/lambda_code.zip'
          aws_region: 'eu-west-1'

      - name: Copy dependencies to s3
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          source: 'dependencies_layer.zip'
          dest: 's3://lambda-dependencies-test/${{ env.REPO_NAME }}/dependencies_layer.zip'
          aws_region: 'eu-west-1'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Deploy to AWS CloudFormation
        id: create-stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: '${{ env.REPO_NAME }}'
          template: 'cloudformation/template.yml'
          capabilities: 'CAPABILITY_IAM'
          parameter-overrides: |
            RepoName=${{ env.REPO_NAME }}
